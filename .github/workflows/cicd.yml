name: ci/cd

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: corepack enable

      - uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile
        env:
          NODE_ENV: development

      - run: pnpm build

      - name: Compress and archive dist folder
        run: tar -cvf dist.tar.gz dist action.yml

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist.tar.gz
          path: dist.tar.gz

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: corepack enable

      - uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile
        env:
          NODE_ENV: development

      - run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: corepack enable

      - uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: v1-${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile
        env:
          NODE_ENV: development

      - run: pnpm typecheck

  publish:
    runs-on: ubuntu-latest

    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build, lint, typecheck]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: dist

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist.tar.gz
          path: .

      - name: Extract artifact folder
        run: tar -xvf dist.tar.gz

      - name: Check git status
        id: status
        run: |
          CHANGED_FILES="$(git diff --name-only -- dist/ action.yml)"
          echo "diff-length=${#CHANGED_FILES}" >> $GITHUB_OUTPUT

      - uses: EndBug/add-and-commit@v9
        if: ${{ steps.status.outputs.diff-length > 0 }}
        with:
          message: "Publish ${{ github.sha }}"
          default_author: github_actions
          push: true
